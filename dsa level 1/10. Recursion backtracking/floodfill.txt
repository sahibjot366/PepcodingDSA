import java.io.*;
import java.util.*;

public class Main {
    
    static int[][] directions={{-1,0},{0,-1},{1,0},{0,1}};
    static String[] dirN={"t","l","d","r"};

    public static void main(String[] args) {
        Scanner scn = new Scanner(System.in);
        int n = scn.nextInt();
        int m = scn.nextInt();
        int[][] arr = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                arr[i][j] = scn.nextInt();
            }
        }
        floodfill(arr, 0, 0, "");
    }
    
    // asf -> answer so far
    public static void floodfill(int[][] maze, int sr, int sc, String asf) {
        if(sr<0 || sc<0 || sr>=maze.length || sc>=maze[0].length || maze[sr][sc]==1)
            return;
        if(sr==maze.length-1 && sc==maze[0].length-1){
            System.out.println(asf);
            return;
        }
        int rinc=0;
        int cinc=0;
        for(int d=0;d<directions.length;d++){
            rinc=directions[d][0];
            cinc=directions[d][1];
            maze[sr][sc]=1;
            floodfill(maze,sr+rinc,sc+cinc,asf+dirN[d]);
            maze[sr][sc]=0;
        }
    }
}
