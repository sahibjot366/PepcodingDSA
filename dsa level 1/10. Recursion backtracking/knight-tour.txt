import java.io.*;
import java.util.*;

public class Main {

    static int[][] directions={{-2,1},{-1,2},{1,2},{2,1},{2,-1},{1,-2},{-1,-2},{-2,-1}};
    public static void main(String[] args) throws Exception {
        Scanner scn=new Scanner(System.in);
        int n=scn.nextInt();
        int [][] chess=new int[n][n];
        int row=scn.nextInt();
        int col=scn.nextInt();
        printKnightsTour(chess,row,col,1);
    }

    public static void printKnightsTour(int[][] chess, int r, int c, int upcomingMove) {
        if(r<0 || c<0 || r>=chess.length || c>=chess.length || chess[r][c]!=0){
            return;
        }
        if(upcomingMove==chess.length*chess.length){
            chess[r][c]=upcomingMove;
            displayBoard(chess);
            chess[r][c]=0;
            return;
        }
        chess[r][c]=upcomingMove;
        int rinc=0;
        int cinc=0;
        for(int d=0;d<directions.length;d++){
            rinc=directions[d][0];
            cinc=directions[d][1];
            printKnightsTour(chess,r+rinc,c+cinc,upcomingMove+1);
        }
        chess[r][c]=0;
    }

    public static void displayBoard(int[][] chess){
        for(int i = 0; i < chess.length; i++){
            for(int j = 0; j < chess[0].length; j++){
                System.out.print(chess[i][j] + " ");
            }
            System.out.println();
        }

        System.out.println();
    }
}